<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ProductDetails', 'doctrine');

/**
 * BaseProductDetails
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $product_id
 * @property integer $category_id
 * @property Category $Category
 * @property Product $Product
 * 
 * @method integer        getId()          Returns the current record's "id" value
 * @method integer        getProductId()   Returns the current record's "product_id" value
 * @method integer        getCategoryId()  Returns the current record's "category_id" value
 * @method Category       getCategory()    Returns the current record's "Category" value
 * @method Product        getProduct()     Returns the current record's "Product" value
 * @method ProductDetails setId()          Sets the current record's "id" value
 * @method ProductDetails setProductId()   Sets the current record's "product_id" value
 * @method ProductDetails setCategoryId()  Sets the current record's "category_id" value
 * @method ProductDetails setCategory()    Sets the current record's "Category" value
 * @method ProductDetails setProduct()     Sets the current record's "Product" value
 * 
 * @package    symfonypractice
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductDetails extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_details');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('product_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('category_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'category_id',
             'cascade' => array(
             0 => 'delete',
             )));

        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'product_id',
             'cascade' => array(
             0 => 'delete',
             )));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}