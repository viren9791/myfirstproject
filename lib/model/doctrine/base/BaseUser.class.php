<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('User', 'doctrine');

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property string $image
 * @property string $email
 * @property string $contact_no
 * @property string $tw_oauth_token
 * @property string $tw_oauth_token_secrete
 * @property string $fb_uid
 * @property string $fb_access_token
 * @property string $salt
 * @property Doctrine_Collection $DummyCart
 * 
 * @method integer             getId()                     Returns the current record's "id" value
 * @method string              getUsername()               Returns the current record's "username" value
 * @method string              getPassword()               Returns the current record's "password" value
 * @method string              getImage()                  Returns the current record's "image" value
 * @method string              getEmail()                  Returns the current record's "email" value
 * @method string              getContactNo()              Returns the current record's "contact_no" value
 * @method string              getTwOauthToken()           Returns the current record's "tw_oauth_token" value
 * @method string              getTwOauthTokenSecrete()    Returns the current record's "tw_oauth_token_secrete" value
 * @method string              getFbUid()                  Returns the current record's "fb_uid" value
 * @method string              getFbAccessToken()          Returns the current record's "fb_access_token" value
 * @method string              getSalt()                   Returns the current record's "salt" value
 * @method Doctrine_Collection getDummyCart()              Returns the current record's "DummyCart" collection
 * @method User                setId()                     Sets the current record's "id" value
 * @method User                setUsername()               Sets the current record's "username" value
 * @method User                setPassword()               Sets the current record's "password" value
 * @method User                setImage()                  Sets the current record's "image" value
 * @method User                setEmail()                  Sets the current record's "email" value
 * @method User                setContactNo()              Sets the current record's "contact_no" value
 * @method User                setTwOauthToken()           Sets the current record's "tw_oauth_token" value
 * @method User                setTwOauthTokenSecrete()    Sets the current record's "tw_oauth_token_secrete" value
 * @method User                setFbUid()                  Sets the current record's "fb_uid" value
 * @method User                setFbAccessToken()          Sets the current record's "fb_access_token" value
 * @method User                setSalt()                   Sets the current record's "salt" value
 * @method User                setDummyCart()              Sets the current record's "DummyCart" collection
 * 
 * @package    symfonypractice
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('contact_no', 'string', 13, array(
             'type' => 'string',
             'autoincrement' => false,
             'length' => 13,
             ));
        $this->hasColumn('tw_oauth_token', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('tw_oauth_token_secrete', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('fb_uid', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('fb_access_token', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('salt', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('DummyCart', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}