<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AttributeValues', 'doctrine');

/**
 * BaseAttributeValues
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $attribute_id
 * @property string $value
 * @property Doctrine_Collection $Attribute
 * @property Doctrine_Collection $ProductAttribute
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method integer             getAttributeId()      Returns the current record's "attribute_id" value
 * @method string              getValue()            Returns the current record's "value" value
 * @method Doctrine_Collection getAttribute()        Returns the current record's "Attribute" collection
 * @method Doctrine_Collection getProductAttribute() Returns the current record's "ProductAttribute" collection
 * @method AttributeValues     setId()               Sets the current record's "id" value
 * @method AttributeValues     setAttributeId()      Sets the current record's "attribute_id" value
 * @method AttributeValues     setValue()            Sets the current record's "value" value
 * @method AttributeValues     setAttribute()        Sets the current record's "Attribute" collection
 * @method AttributeValues     setProductAttribute() Sets the current record's "ProductAttribute" collection
 * 
 * @package    symfonypractice
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAttributeValues extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('attribute_values');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('attribute_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('value', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Attribute', array(
             'local' => 'attribute_id',
             'foreign' => 'attribute_id'));

        $this->hasMany('ProductAttribute', array(
             'local' => 'id',
             'foreign' => 'attribute_value_id'));
    }
}