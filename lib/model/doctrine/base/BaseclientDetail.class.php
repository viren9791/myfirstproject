<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('clientDetail', 'doctrine');

/**
 * BaseclientDetail
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_client
 * @property varchar $name
 * @property varchar $email
 * @property varchar $address
 * @property client $client
 * 
 * @method integer      getIdClient()  Returns the current record's "id_client" value
 * @method varchar      getName()      Returns the current record's "name" value
 * @method varchar      getEmail()     Returns the current record's "email" value
 * @method varchar      getAddress()   Returns the current record's "address" value
 * @method client       getClient()    Returns the current record's "client" value
 * @method clientDetail setIdClient()  Sets the current record's "id_client" value
 * @method clientDetail setName()      Sets the current record's "name" value
 * @method clientDetail setEmail()     Sets the current record's "email" value
 * @method clientDetail setAddress()   Sets the current record's "address" value
 * @method clientDetail setClient()    Sets the current record's "client" value
 * 
 * @package    symfonypractice
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseclientDetail extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('client_detail');
        $this->hasColumn('id_client', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('name', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('email', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('address', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('client', array(
             'local' => 'id_client',
             'foreign' => 'id',
             'cascade' => array(
             0 => 'update',
             )));
    }
}