<?php

/**
 * ProductAttributeTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    Myfirstproject
 * @subpackage Model
 * @author     viren   <virendav.vitrainee@gmail.com>     
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
 
class ProductAttributeTable extends Doctrine_Table
{
  
 /**
  * Executes getInstance  to get instance.
  *
  * @author viren   <virendav.vitrainee@gmail.com>    
  * @access public
  *
  * @return object
  */  
  public static function getInstance()
  {
    return Doctrine_Core::getTable('ProductAttribute');
  }
 /**
  * Executes listingProduct function to get list of jobs.
  *
  * @param String $sortBy    stores sort by
  * @param String $productId stores product id
  * @param String $valueId   stores value id
  *
  * @author viren   <virendav.vitrainee@gmail.com>    
  * @access public
  *
  * @return array
  */
  public function listingAttributeWiseImage($sortBy, $productId, $valueId)
  {
    $query = Doctrine_Query::create()
      ->select('pa.*, p.*, a.name,av.value')
      ->from('Product p')
      ->leftjoin('p.ProductAttribute pa')
      ->leftjoin('pa.Attribute a')
      ->leftjoin('pa.AttributeValues av')
      ->where('pa.product_id = ? ', $productId)
      ->andWhere('pa.attribute_value_id = ? ', $valueId)
      ->orderBy('p.name '.$sortBy)
      ->fetchArray();
     return $query;     
  }
  
 /**
  * Executes listingProduct function to get list of jobs.
  *
  * @param String $sortBy     stores sort by
  * @param String $searchBy   stores search fields  value
  * @param String $categoryId stores category id
  *
  * @author viren   <virendav.vitrainee@gmail.com>    
  * @access public
  * @return array
  */
  
  public function listingProductAttribute($sortBy, $searchBy, $categoryId)
  {
    if($sortBy =='' && $searchBy =='' && $categoryId == '')
      return false;
    else
    {  
    $query = Doctrine_Query::create()
          ->select('pa.*,p.*,a.name,av.value')
          ->from('Product p')
          ->leftjoin('p.ProductAttribute pa')
          ->leftjoin('pa.Attribute a')
          ->leftjoin('pa.AttributeValues av')
          ->leftjoin('p.ProductDetails pd');
      if($searchBy == '')
          $query -> where('pd.category_id = ?', $categoryId);  
      else
          $query -> where('p.product_id LIKE ? ', $searchBy.'%');
    $query -> orderBy('p.name '.$sortBy);      
      return $query;
    }
  }
  
 /**
  * Executes listingProductAttributeAdmin function to get list of jobs.
  *
  * @param String $sortBy    stores sort by
  * @param String $searchBy  stores search fields  value
  *
  * @author viren   <virendav.vitrainee@gmail.com>    
  * @access public
  *
  * @return array
  */
  public function listingProductAttributeAdmin($sortBy, $searchBy)
  {
    if($sortBy =='' && $searchBy =='')
      return false;
    else
    { 
      $query = Doctrine_Query::create()
          ->select('pa.*, p.*, a.name, av.value')
          ->from('ProductAttribute pa')
          ->leftjoin('pa.Product p WITH pa.product_id = p.product_id')
          ->leftjoin('pa.Attribute a WITH pa.attribute_id = a.attribute_id')
          ->leftjoin('pa.AttributeValues av WITH pa.attribute_value_id = av.id'); 
      if($searchBy != '')
      {       
       
        $query 
        -> where('pa.id LIKE ? ', $searchBy.'%')
            ->groupBy('pa.product_id');
      }    
    $query -> orderBy('p.name '.$sortBy);
      return $query;
    }
  }
  
 /**
  * Executes listingAttributeValueById function to get list of jobs.
  *
  * @param String $attributeId stores attribute id
  *
  * @author viren   <virendav.vitrainee@gmail.com>    
  * @access public
  * @return array
  */
  public function listingAttributeValueById($attributeId)
  {
    if($attributeId == '') 
      return false;
    else
    {   
      $query = Doctrine_Query::create()
        ->select('av.*')
        ->from('AttributeValues av')
        ->where('av.attribute_id = ?', $attributeId);
      return $query;   
    } 
  }
  
 /**
  * Executes listAttribute function to get list of attributes.
  *
  * @param String $productId stores search fields  value
  *
  * @author viren   <virendav.vitrainee@gmail.com>    
  * @access public
  * @return array
  */
  public function listAttribute($productId)
  {
    if($productId =='')
      return false;
    else
    {
      $query = Doctrine_Query::create()
        ->select('pa.*, a.name, av.value')
        ->from('ProductAttribute pa')
        ->leftjoin('pa.Attribute a WITH pa.attribute_id = a.attribute_id')
        ->leftjoin('pa.AttributeValues av WITH pa.attribute_value_id = av.id')
        ->where('pa.product_id = ?', $productId)
        ->groupBy('pa.product_id')
        ->orderBy('av.value Asc');      
      return $query;
    }
  }
}